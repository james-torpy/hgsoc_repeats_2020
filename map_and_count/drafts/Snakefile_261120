# Run command:
# snakemake --reason --cores 120 --cluster 'qsub -pe smp 2 -N repeats.smk -wd '/share/ScratchGeneral/jamtor/projects/hgsoc_repeats/RNA-seq/logs' -b y -j y -V -P TumourProgression' -j 60

# DAG command:
# snakemake --dag | dot -Tsvg > dag.svg

### This script counts repeats, protein coding and ribosomal read pairs, 
# then performs a range of DE ###

import glob
import os

# define directories:
R_dir = '/share/ClusterShare/software/contrib/briglo/octR/src/R-3.6.0/builddir/bin/'
in_dir = './results/star/GC/'

# fetch sample names:
#SAMPLES = [os.path.basename(file) for file in glob.glob(in_dir + 'AOCS*')]
#SAMPLES = [x for x in SAMPLES if ".tar.gz" not in x]
#SAMPLES = [x for x in SAMPLES if ".sub" not in x]
#SAMPLES = [x for x in SAMPLES if x not in list(["AOCS-088-2", "AOCS-142-4"])]

#print('Samples are:')
#print(SAMPLES)
SAMPLES = list([
  'AOCS_034_4', 'AOCS_056_2', "AOCS_058_2"
])

# counting parameters:
split = 'no'

rule all:
    input:
        expand(
            'results/htseq/{sample}/counts.gc.custom3.htseq.txt',
            sample=SAMPLES, split=split
        )

rule htseq:
    input:
        'results/star/GC/{sample}/Aligned.out.bam'
    output:
        'results/htseq/{sample}/counts.gc.custom3.htseq.txt'
    threads: 2
    shell:
        'cd logs; ' + 
        ' ../scripts/map_and_count/3a.htseq_mmap.sh' + 
        ' {wildcards.sample}' +
        ' 2' + # cores
        ' {split} 2> {wildcards.sample}.htseq.errors'



